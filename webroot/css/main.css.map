{"version":3,"sources":["css/main.sass","css/mixins/_custom.sass","css/mixins/_mixin.sass"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@import 'mixins';\n* {\n }  // outline: 1px solid red\nbody {\n\tbackground: #fad700;\n\tfont-size: 16px;\n\t.wrapper {\n\t\twidth: 100%;\n\t\tmax-width: 640px;\n\t\tmargin: 0 auto; }\n\timg {\n\t\twidth: 100%; }\n\t.pc {\n\t\tdisplay: none; } }\n\n.header {\n\tbackground: #fff;\n\tpadding: 10px 10px;\n\tmargin-bottom: 5px;\n\tposition: relative;\n\t.wrapper {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center; }\n\t&::after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 5px;\n\t\tbackground: linear-gradient(to right, #b09f66, #c4b68a, #e2dbc6, #dcd4ba, #b6a671);\n\t\tposition: absolute;\n\t\ttop: 100%;\n\t\tleft: 0; }\n\timg {\n\t\twidth: auto;\n\t\theight: 30px; }\n\ta:first-child img {\n\t\theight: 27px; } }\n.bottom {\n\tpadding: 20px 20px;\n\tbackground: #c52b1e;\n\tborder-top: 5px solid #d8c8ad;\n\tcolor: #FFF;\n\ttext-align: left;\n\tline-height: 1.6;\n\ta {\n\t\tcolor: #fff;\n\t\tdisplay: inline-block; } }\n\n#menu {\n\t&.fixed {\n\t\tposition: fixed;\n\t\tz-index: 9;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tmargin: auto;\n\t\tmax-width: 640px;\n\t\tbox-shadow: 0 10px 10px rgba(#000, .1); }\n\tul {\n\t\twidth: 100%;\n\t\tdisplay: block;\n\t\tfont-size: 0;\n\t\tposition: relative;\n\t\t&::before, &::after {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\tbackground: #FFF;\n\t\t\tz-index: 8;\n\t\t\t@include centeralign; }\n\t\t&::before {\n\t\t\twidth: 100%;\n\t\t\theight: 1px; }\n\t\t&::after {\n\t\t\twidth: 1px;\n\t\t\theight: 100%; } }\n\tli {\n\t\tdisplay: inline-block;\n\t\twidth: 50%;\n\t\tfont-size: 20px;\n\t\ttext-align: center;\n\t\tfont-weight: 700;\n\t\tposition: relative;\n\t\t&:hover a, &.active a {\n\t\t\tcolor: #FFF;\n\t\t\tbackground: #ef4b23; }\n\t\t&.active a {\n } }\t\t\t// pointer-events: none\n\ta {\n\t\tcolor: #ef4b23;\n\t\tpadding: 8px 0;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbackground: #e5e5e5; }\n\tspan {\n\t\tdisplay: inline-block;\n\t\tfont-size: 26px;\n\t\tfont-weight: 900;\n\t\tmargin-left: 3px; } }\n\n.acd {\n\tpadding: 25px;\n\tmargin: 0 auto;\n\tz-index: 2;\n\tposition: relative; }\n.acd-item {\n\tbackground: #FFF; }\n.acd-head {\n\tpadding: 10px 15px;\n\tfont-size: 25px;\n\tfont-weight: 700;\n\tcolor: #FFF;\n\tposition: relative;\n\tcursor: pointer;\n\t&::before, &::after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\twidth: 20px;\n\t\theight: 4px;\n\t\tbackground: url('../images/bg_ico.png') no-repeat 0 0;\n\t\tbackground-size: 100% 100%;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tright: 15px;\n\t\tmargin: auto;\n\t\ttransition: all, .2s; }\n\t&::after {\n\t\t@include rotate(90); }\n\t&.is-active::after {\n\t\t@include rotate(0); } }\n.acd-body {\n\tbackground: url('../images/bg_shadow.png') no-repeat 0 0;\n\tbackground-size: 100% 40px;\n\tfont-weight: 300;\n\tpadding: 20px;\n\tdisplay: none; }\n\n#note {\n\t.acd-head {\n\t\tbackground: url('../images/bg_note.png') no-repeat 0 0;\n\t\tbackground-size: 100% 100%;\n\t\t&::before, &::after {\n\t\t\tbackground: #FFF; } }\n\t.acd-body {\n\t\tp {\n\t\t\tfont-weight: 500;\n\t\t\tfont-size: 18px;\n\t\t\tmargin-bottom: 10px;\n\t\t\tmargin-left: -0.5em; }\n\t\ta {\n\t\t\tdisplay: inline-block;\n\t\t\tcolor: blue;\n\t\t\ttext-decoration: underline;\n\t\t\tmargin: 0 1px; }\n\t\tul {\n\t\t\tpadding-left: 20px; }\n\t\tli {\n\t\t\tmargin-bottom: 15px;\n\t\t\tposition: relative;\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 10px;\n\t\t\t\theight: 10px;\n\t\t\t\tbackground: #000;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 8px;\n\t\t\t\tleft: -20px; } }\n\t\t.mark {\n\t\t\tcolor: red;\n\t\t\t&::before {\n\t\t\t\tbackground: red; } } } }\n\n.deco-1, .deco-2 {\n\tposition: relative;\n\tz-index: 1;\n\timg {\n\t\tposition: relative;\n\t\tz-index: 1; }\n\t.title {\n\t\t@include centeralign;\n\t\twidth: auto;\n\t\theight: 45px;\n\t\tz-index: 2;\n\t\tmargin-top: -20px; } }\n.deco-1 {\n\tmargin-bottom: -15%; }\n.deco-2 .title {\n\tmargin-top: -10px; }\n\n.info {\n\tbackground: #f2f2f2;\n\t.title {\n\t\tcolor: #ef4b23;\n\t\tfont-weight: 500;\n\t\tfont-size: 18px;\n\t\timg {\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 45px;\n\t\t\tvertical-align: middle; } }\n\tol {\n\t\tcounter-increment: num1;\n\t\tmargin-bottom: 5px;\n\t\t&::before {\n\t\t\tcontent: '(' counter(num1) ') '; } } }\n\n.para {\n\tpadding: 0 20px;\n\tmargin: -25% 0 30px;\n\tli {\n\t\tmargin-bottom: 20px; } }\n\n.conditions {\n\tpadding: 0 20px;\n\tmargin-bottom: -10%;\n\tposition: relative;\n\tz-index: 2;\n\tli {\n\t\tmargin-bottom: 5px;\n\t\tlist-style-position: inside;\n\t\tfont-weight: 300;\n\t\tfont-size: 15px;\n\t\tcounter-increment: num2;\n\t\t&::before {\n\t\t\tcontent: counter(num2) '. '; }\n\t\tol {\n\t\t\tmargin-left: 1em; } } }\n\n#qa {\n\tbackground: #ef4b23;\n\t.acd-item {\n\t\tmargin-bottom: 10px;\n\t\tbackground: #e5e5e5; }\n\t.acd-head {\n\t\tbackground: #FFF;\n\t\tcolor: #000;\n\t\tfont-size: 17px;\n\t\tfont-weight: 500;\n\t\tline-height: 1.3;\n\t\tpadding: 10px 38px 10px 50px;\n\t\t&::before, &::after, span {\n\t\t\tbackground: url('../images/bg_ico.png') no-repeat 0 0;\n\t\t\tbackground-size: 100% 100%; }\n\t\t&::before, &::after {\n\t\t\ttop: 22px;\n\t\t\tbottom: auto; }\n\t\tspan {\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 30px;\n\t\t\theight: 30px;\n\t\t\tcolor: #FFF;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 22px;\n\t\t\tfont-family: 'Roboto', sans-serif;\n\t\t\tfont-weight: 900;\n\t\t\tline-height: 1.45;\n\t\t\tposition: absolute;\n\t\t\ttop: 12px;\n\t\t\tleft: 10px; } }\n\t.acd-body li {\n\t\tposition: relative;\n\t\tpadding-left: 10px;\n\t\tfont-size: 15px;\n\t\t& + li {\n\t\t\tmargin-top: 5px; }\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\twidth: 3px;\n\t\t\theight: 3px;\n\t\t\tbackground: #000;\n\t\t\tposition: absolute;\n\t\t\ttop: 10px;\n\t\t\tleft: 0;\n\t\t\tz-index: 8; }\n\t\tol {\n\t\t\tfont-weight: 400; } } }\n#fund {\n\t.acd-head {\n\t\tbackground: transparent url('../images/bg_dot2.png') repeat-y 0 0;\n\t\tbackground-size: 100% auto;\n\t\tpadding: 10px 0 0;\n\t\timg {\n\t\t\tmargin-top: -10%; }\n\t\t&::before, &::after {\n\t\t\twidth: 15px;\n\t\t\theight: 3px;\n\t\t\ttop: auto;\n\t\t\tbottom: 32px;\n\t\t\tright: 10px; }\n\t\t.line {\n\t\t\twidth: 100%;\n\t\t\theight: 5px;\n\t\t\tbackground: url('../images/bg_line.png') repeat-y 0 100%;\n\t\t\tbackground-size: 100% auto; } }\n\t.acd-item {\n\t\tbackground: transparent;\n\t\tpadding: 10% 0 5px; }\n\t.acd-body {\n\t\tbackground: #000;\n\t\tpadding-top: 7px;\n\t\tp {\n\t\t\tcolor: #ffffff;\n\t\t\tfont-weight: 700;\n\t\t\tfont-size: 18px;\n\t\t\tmargin-bottom: 5px; }\n\t\ttable {\n\t\t\ttext-align: center;\n\t\t\tfont-weight: 400;\n\t\t\tfont-size: 14px;\n\t\t\tborder-spacing: 3px; }\n\t\tth {\n\t\t\tbackground: #fad700;\n\n\t\t\tvertical-align: middle;\n\t\t\twhite-space: nowrap;\n\t\t\tpadding: 5px; }\n\t\ttd {\n\t\t\tbackground: #FFF;\n\t\t\tvertical-align: middle;\n\t\t\tpadding: 5px;\n\t\t\tspan {\n\t\t\t\tcolor: red; }\n\t\t\t&:last-child {\n\t\t\t\ttext-align: left; } } } }\n\n#btns {\n\tposition: fixed;\n\tz-index: 99;\n\twidth: 80px;\n\tright: 0;\n\tbottom: 0;\n\tpadding: 10px;\n\ta {\n\t\tdisplay: inline-block; } }\n\n","@mixin clearfix {\n  &:after {\n    content: '';\n    clear: both;\n    display: block; } }\n\n@mixin size($w, $h: auto) {\n\twidth: $w;\n\theight: $h; }\n\n@mixin flexCenter {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center; }\n\n@mixin radius($radius: 100%) {\n\tborder-radius: $radius; }\n\n@mixin valign {\n\tposition: absolute;\n\ttop: 50%;\n\ttransform: translateY(-50%); }\n@mixin halign {\n\tposition: absolute;\n\tleft: 50%;\n\ttransform: translateX(-50%); }\n@mixin centeralign {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%); }\n","////\n/// @author Matthieu Aussaguel\n/// @group sass-css3-mixins\n////\n\n/// Adds a browser prefix to the property\n/// @param {*} $property Property\n/// @param {*} $value Value\n\n@mixin css3-prefix($property, $value) {\n  -webkit-#{$property}: #{$value};\n  -khtml-#{$property}: #{$value};\n  -moz-#{$property}: #{$value};\n  -ms-#{$property}: #{$value};\n  -o-#{$property}: #{$value};\n  #{$property}: #{$value}; }\n\n/// Background Gradient\n/// @param {Color} $startColor [#3C3C3C] - Start Color\n/// @param {Color} $endColor [#999999] - End Color\n\n@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {\n  background-color: $startColor;\n  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));\n  background-image: -webkit-linear-gradient(top, $startColor, $endColor);\n  background-image: -moz-linear-gradient(top, $startColor, $endColor);\n  background-image: -ms-linear-gradient(top, $startColor, $endColor);\n  background-image: -o-linear-gradient(top, $startColor, $endColor);\n  background-image: linear-gradient(top, $startColor, $endColor);\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}'); }\n\n/// Background Horizontal\n/// @param {Color} $startColor [#3C3C3C] - Start Color\n/// @param {Color} $endColor [#999999] - End Color\n\n@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {\n  background-color: $startColor;\n  background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));\n  background-image: -webkit-linear-gradient(left, $startColor, $endColor);\n  background-image: -moz-linear-gradient(left, $startColor, $endColor);\n  background-image: -ms-linear-gradient(left, $startColor, $endColor);\n  background-image: -o-linear-gradient(left, $startColor, $endColor);\n  background-image: linear-gradient(left, $startColor, $endColor);\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1'); }\n\n/// Background Radial\n/// @param {Color} $startColor [#3C3C3C] - Start Color\n/// @param {Percentage} $startPos [0%] - Start position\n/// @param {Color} $endColor [#999999] - End Color\n/// @param {Percentage} $endPos [100%] - End position\n\n@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos: 100%) {\n  background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\n  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos, $startColor), color-stop($endPos, $endColor));\n  background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\n  background: -o-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\n  background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\n  background: radial-gradient(ellipse at center, $startColor $startPos, $endColor $endPos); }\n\n/// Background Size\n/// @param {Size} $width [100%] - Width\n/// @param {Size} $width [$width] - Height\n/// @require {mixin} css3-prefix\n\n@mixin background-size($width: 100%, $height: $width) {\n  @if type-of($width) == \"number\" and $height != null {\n    @include css3-prefix(\"background-size\", $width $height); }\n  @else {\n    @include css3-prefix(\"background-size\", $width); } }\n\n/// Background Color Opacity\n/// @param {Color} $color [100%] - Color\n/// @param {Double} $opacity [0.85] - Opacity\n\n@mixin background-opacity($color: #000, $opacity: 0.85) {\n  background: $color;\n  background: rgba($color, $opacity); }\n\n/// Border Radius\n/// @param {Size} $radius [5px] - Radius\n/// @require {mixin} css3-prefix\n\n@mixin border-radius($radius: 5px) {\n  @include css3-prefix(\"border-radius\", $radius); }\n\n/// Border Radius Separate\n/// @param {Size} $topLeftRadius [5px] - Top Left\n/// @param {Size} $topRightRadius [5px] - Top Right\n/// @param {Size} $bottomLeftRadius [5px] - Bottom Left\n/// @param {Size} $bottomRightRadius [5px] - Bottom Right\n\n@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {\n  -webkit-border-top-left-radius: $topLeftRadius;\n  -webkit-border-top-right-radius: $topRightRadius;\n  -webkit-border-bottom-right-radius: $bottomRightRadius;\n  -webkit-border-bottom-left-radius: $bottomLeftRadius;\n  -moz-border-radius-topleft: $topLeftRadius;\n  -moz-border-radius-topright: $topRightRadius;\n  -moz-border-radius-bottomright: $bottomRightRadius;\n  -moz-border-radius-bottomleft: $bottomLeftRadius;\n  border-top-left-radius: $topLeftRadius;\n  border-top-right-radius: $topRightRadius;\n  border-bottom-right-radius: $bottomRightRadius;\n  border-bottom-left-radius: $bottomLeftRadius; }\n\n/// Box\n/// @param {*} $orient [horizontal] - Orientation\n/// @param {*} $pack [center] - Pack\n/// @param {*} $align [center] - Align\n/// @require {mixin} css3-prefix\n\n@mixin box($orient: horizontal, $pack: center, $align: center) {\n  display: -webkit-box;\n  display: -moz-box;\n  display: box;\n  @include css3-prefix(\"box-orient\", $orient);\n  @include css3-prefix(\"box-pack\", $pack);\n  @include css3-prefix(\"box-align\", $align); }\n\n/// Box RGBA\n/// @param {Integer} $r [60] - Red\n/// @param {Integer} $g [3] - Green\n/// @param {Integer} $b [12] - Blue\n/// @param {Double} $opacity [0.23] - Opacity\n/// @param {Color} $color [#3C3C3C] - Color\n\n@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {\n  background-color: transparent;\n  background-color: rgba($r, $g, $b, $opacity);\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');\n  zoom: 1; }\n\n/// Box Shadow\n/// @param {Size} $x [2px] - X\n/// @param {Size} $y [2px] - Y\n/// @param {Size} $blur [5px] - Blur\n/// @param {Color} $color [rgba(0,0,0,.4)] - Color\n/// @param {Boolean} $inset - Inset\n\n@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, 0.4), $inset: \"\") {\n  @if $inset != \"\" {\n    @include css3-prefix(\"box-shadow\", $inset $x $y $blur $color); }\n  @else {\n    @include css3-prefix(\"box-shadow\", $x $y $blur $color); } }\n\n/// Box Sizing\n/// @param {*} $type [border-box] - Type\n/// @require {mixin} css3-prefix\n\n@mixin box-sizing($type: border-box) {\n  @include css3-prefix(\"box-sizing\", $type); }\n\n/// Columns\n/// @param {Integer} $count [3] - Count\n/// @param {Integer} $gap [10] - Gap\n/// @require {mixin} css3-prefix\n\n@mixin columns($count: 3, $gap: 10) {\n  @include css3-prefix(\"column-count\", $count);\n  @include css3-prefix(\"column-gap\", $gap); }\n\n/// Double Borders\n/// @param {Color} $colorOne [#3C3C3C] - Color One\n/// @param {Color} $colorTwo [#999999] - Color Two\n/// @param {Size} $radius [0] - Radius\n/// @require {mixin} css3-prefix\n/// @require {mixin} border-radius\n\n@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {\n  border: 1px solid $colorOne;\n  @include css3-prefix(\"box-shadow\", 0 0 0 1px $colorTwo);\n  @include border-radius($radius); }\n\n/// Flex\n/// @param {Integer} $value [1] - Value\n/// @require {mixin} css3-prefix\n\n@mixin flex($value: 1) {\n  @include css3-prefix(\"box-flex\", $value); }\n\n/// Flip\n/// @param {Double} $scaleX [-1] - ScaleX\n/// @require {mixin} css3-prefix\n\n@mixin flip($scaleX: -1) {\n  @include css3-prefix(\"transform\", scaleX($scaleX));\n  filter: FlipH;\n  -ms-filter: \"FlipH\"; }\n\n/// Font Face\n/// @param {Font} $fontFamily [myFont] - Font Family\n/// @param {String} $eotFileSrc ['myFont.eot'] - Eot File Source\n/// @param {String} $woffFileSrc ['myFont.woff'] - Woff File Source\n/// @param {String} $ttfFileSrc ['myFont.ttf'] - Ttf File Source\n/// @param {String} $svgFileSrc ['myFont.svg'] - Svg File Source\n\n@mixin font-face($fontFamily: myFont, $eotFileSrc: \"myFont.eot\", $woffFileSrc: \"myFont.woff\", $ttfFileSrc: \"myFont.ttf\", $svgFileSrc: \"myFont.svg\", $svgFontID: \"#myFont\") {\n  font-family: $fontFamily;\n  src: url($eotFileSrc) format(\"eot\"), url($woffFileSrc) format(\"woff\"), url($ttfFileSrc) format(\"truetype\"), url($svgFileSrc + $svgFontID) format(\"svg\"); }\n\n/// Opacity\n/// @param {Double} $opacity [0.5] - Opacity\n/// @require {mixin} css3-prefix\n\n@mixin opacity($opacity: 0.5) {\n  $opacityMultiplied: $opacity * 100;\n  filter: alpha(opacity = $opacityMultiplied);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + $opacityMultiplied + \")\";\n  @include css3-prefix(\"opacity\", $opacity); }\n\n/// Outline Radius\n/// @param {Size} $radius [5px] - Radius\n/// @require {mixin} css3-prefix\n\n@mixin outline-radius($radius: 5px) {\n  @include css3-prefix(\"outline-radius\", $radius); }\n\n/// Resize\n/// @param {*} $directoin [both] - Direction\n/// @require {mixin} css3-prefix\n\n@mixin resize($direction: both) {\n  @include css3-prefix(\"resize\", $direction); }\n\n/// Rotate\n//\n// / CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html\n// / @param {Double} $deg [0] - Degree\n// / @param {Double} $m11 [0] - M11\n// / @param {Double} $m12 [0] - M12\n// / @param {Double} $m21 [0] - M21\n// / @param {Double} $m22 [0] - M22\n// / @require {mixin} css3-prefix\n\n@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {\n  @include css3-prefix(\"transform\", rotate($deg + deg));\n  filter: progid:DXImageTransform.Microsoft.Matrix( M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');\n  zoom: 1; }\n\n// Browser Prefixes\n@mixin transform($transforms) {\n  -webkit-transform: $transforms;\n  -moz-transform: $transforms;\n  -ms-transform: $transforms;\n  transform: $transforms; }\n\n// Rotate\n@mixin rotate ($deg) {\n  @include transform(rotate(#{$deg}deg)); }\n\n// Scale\n@mixin scale($scale) {\n  @include transform(scale($scale)); }\n\n// Translate\n@mixin translate ($x, $y) {\n  @include transform(translate($x, $y)); }\n\n// Skew\n@mixin skew ($x, $y) {\n  @include transform(skew(#{$x}deg, #{$y}deg)); }\n\n/// Text Shadow\n/// @param {Size} $x [2px] - X\n/// @param {Size} $y [2px] - Y\n/// @param {Size} $blur [2px] - Blur\n/// @param {Color} $color [rgba(0,0,0,.4)] - Color\n\n@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, 0.4)) {\n  text-shadow: $x $y $blur $color; }\n\n/// Transform\n/// @param {List} $params - Params\n/// @require {mixin} css3-prefix\n\n@mixin transform($params) {\n  @include css3-prefix(\"transform\", $params); }\n\n@mixin translate3d($x, $y, $z) {\n  -webkit-transform: translate3d($x, $y, $z);\n  -moz-transform: translate3d($x, $y, $z);\n  -o-transform: translate3d($x, $y, $z);\n  transform: translate3d($x, $y, $z); }\n\n\n/// Transform-Origin\n/// @param {List} $params - Params\n/// @require {mixin} css3-prefix\n\n@mixin transform-origin($params) {\n  @include css3-prefix(\"transform-origin\", $params); }\n\n// Transform-Style\n/// @param {List} $params - Params\n/// @require {mixin} css3-prefix\n\n@mixin transform-style($style: preserve-3d) {\n  @include css3-prefix(\"transform-style\", $style); }\n\n/// Transition\n/// @param {List} $properties - Properties\n/// @require {mixin} css3-prefix\n\n// =transition($properties...)\n//   @if length($properties) >= 1\n//     +css3-prefix(\"transition\", $properties)\n//   @else\n//     +css3-prefix(\"transition\", \"all 0.2s ease-in-out 0s\")\n\n@mixin transition($property: all, $duration: .3s, $ease: linear) {\n  -webkit-transition: $property $duration $ease;\n  -moz-transition: $property $duration $ease;\n  -o-transition: $property $duration $ease;\n  transition: $property $duration $ease; }\n\n@mixin transform-delay($params) {\n  @include css3-prefix(\"transform-delay\", $params); }\n\n/// Triple Borders\n/// @param {Color} $colorOne [#3C3C3C] - Color One\n/// @param {Color} $colorTwo [#999999] - Color Two\n/// @param {Color} $colorThree [#000000] - Color Three\n/// @param {Size} $radius [0] - Radius\n/// @require {mixin} border-radius\n/// @require {mixin} css3-prefix\n\n@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {\n  border: 1px solid $colorOne;\n  @include border-radius($radius);\n  @include css3-prefix(\"box-shadow\", \"0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}\"); }\n\n/// Keyframes\n/// @param {*} $animation-name - Animation name\n/// @content [Animation css]\n\n@mixin keyframes($animation-name) {\n  @-webkit-keyframes #{$animation-name} {\n    @content; }\n  @-moz-keyframes #{$animation-name} {\n    @content; }\n  @-ms-keyframes #{$animation-name} {\n    @content; }\n  @-o-keyframes #{$animation-name} {\n    @content; }\n  @keyframes #{$animation-name} {\n    @content; } }\n\n/// Animation\n/// @param {*} $str - name duration timing-function delay iteration-count direction fill-mode play-state ([http://www.w3schools.com/cssref/css3_pr_animation.asp](http://www.w3schools.com/cssref/css3_pr_animation.asp))\n/// @require {mixin} css3-prefix\n\n@mixin animation($str) {\n  @include css3-prefix(\"animation\", $str); }\n\n@mixin arrow($direction, $color, $size) {\n  display: block;\n  height: 0;\n  width: 0;\n  @if $direction == 'top' {\n    border-left: $size solid transparent;\n    border-right: $size solid transparent;\n    border-bottom: $size solid $color; }\n  @else if $direction == 'right' {\n    border-top: $size solid transparent;\n    border-bottom: $size solid transparent;\n    border-left: $size solid $color; }\n  @else if $direction == 'bottom' {\n    border-top: $size solid $color;\n    border-right: $size solid transparent;\n    border-left: $size solid transparent; }\n  @else if $direction == 'left' {\n    border-top: $size solid transparent;\n    border-right: $size solid $color;\n    border-bottom: $size solid transparent; }\n  @else if $direction == 'top-left' {\n    border-top: $size solid $color;\n    border-right: $size solid transparent; }\n  @else if $direction == 'top-right' {\n    border-top: $size solid $color;\n    border-left: $size solid transparent; }\n  @else if $direction == 'bottom-left' {\n    border-bottom: $size solid $color;\n    border-right: $size solid transparent; }\n  @else if $direction == 'bottom-right' {\n    border-bottom: $size solid $color;\n    border-left: $size solid transparent; } }\n"]}